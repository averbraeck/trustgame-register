/*
 * This file is generated by jOOQ.
 */
package org.transsonic.trustgame.data.trustgame.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.transsonic.trustgame.data.trustgame.Indexes;
import org.transsonic.trustgame.data.trustgame.Keys;
import org.transsonic.trustgame.data.trustgame.Trustgame;
import org.transsonic.trustgame.data.trustgame.tables.records.UsercarrierRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Usercarrier extends TableImpl<UsercarrierRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>trustgame.usercarrier</code>
     */
    public static final Usercarrier USERCARRIER = new Usercarrier();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsercarrierRecord> getRecordType() {
        return UsercarrierRecord.class;
    }

    /**
     * The column <code>trustgame.usercarrier.ID</code>.
     */
    public final TableField<UsercarrierRecord, Integer> ID = createField(DSL.name("ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>trustgame.usercarrier.GameUser_ID</code>.
     */
    public final TableField<UsercarrierRecord, Integer> GAMEUSER_ID = createField(DSL.name("GameUser_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>trustgame.usercarrier.Carrier_ID</code>.
     */
    public final TableField<UsercarrierRecord, Integer> CARRIER_ID = createField(DSL.name("Carrier_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>trustgame.usercarrier.BoughtReport</code>.
     */
    public final TableField<UsercarrierRecord, Byte> BOUGHTREPORT = createField(DSL.name("BoughtReport"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.field("0", SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>trustgame.usercarrier.RoundNumber</code>. Indicates in which round a report was bought
     */
    public final TableField<UsercarrierRecord, Integer> ROUNDNUMBER = createField(DSL.name("RoundNumber"), SQLDataType.INTEGER.nullable(false), this, "Indicates in which round a report was bought");

    private Usercarrier(Name alias, Table<UsercarrierRecord> aliased) {
        this(alias, aliased, null);
    }

    private Usercarrier(Name alias, Table<UsercarrierRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>trustgame.usercarrier</code> table reference
     */
    public Usercarrier(String alias) {
        this(DSL.name(alias), USERCARRIER);
    }

    /**
     * Create an aliased <code>trustgame.usercarrier</code> table reference
     */
    public Usercarrier(Name alias) {
        this(alias, USERCARRIER);
    }

    /**
     * Create a <code>trustgame.usercarrier</code> table reference
     */
    public Usercarrier() {
        this(DSL.name("usercarrier"), null);
    }

    public <O extends Record> Usercarrier(Table<O> child, ForeignKey<O, UsercarrierRecord> key) {
        super(child, key, USERCARRIER);
    }

    @Override
    public Schema getSchema() {
        return Trustgame.TRUSTGAME;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USERCARRIER_FK_USERCARRIER_CARRIER_IDX, Indexes.USERCARRIER_FK_USERCARRIER_GAMEUSER_IDX);
    }

    @Override
    public Identity<UsercarrierRecord, Integer> getIdentity() {
        return (Identity<UsercarrierRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<UsercarrierRecord> getPrimaryKey() {
        return Keys.KEY_USERCARRIER_PRIMARY;
    }

    @Override
    public List<UniqueKey<UsercarrierRecord>> getKeys() {
        return Arrays.<UniqueKey<UsercarrierRecord>>asList(Keys.KEY_USERCARRIER_PRIMARY, Keys.KEY_USERCARRIER_ID_UNIQUE);
    }

    @Override
    public List<ForeignKey<UsercarrierRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UsercarrierRecord, ?>>asList(Keys.FK_USERCARRIER_GAMEUSER, Keys.FK_USERCARRIER_CARRIER);
    }

    private transient Gameuser _gameuser;
    private transient Carrier _carrier;

    public Gameuser gameuser() {
        if (_gameuser == null)
            _gameuser = new Gameuser(this, Keys.FK_USERCARRIER_GAMEUSER);

        return _gameuser;
    }

    public Carrier carrier() {
        if (_carrier == null)
            _carrier = new Carrier(this, Keys.FK_USERCARRIER_CARRIER);

        return _carrier;
    }

    @Override
    public Usercarrier as(String alias) {
        return new Usercarrier(DSL.name(alias), this);
    }

    @Override
    public Usercarrier as(Name alias) {
        return new Usercarrier(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Usercarrier rename(String name) {
        return new Usercarrier(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Usercarrier rename(Name name) {
        return new Usercarrier(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, Byte, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
