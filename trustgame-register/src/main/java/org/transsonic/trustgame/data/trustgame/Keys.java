/*
 * This file is generated by jOOQ.
 */
package org.transsonic.trustgame.data.trustgame;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.transsonic.trustgame.data.trustgame.tables.Briefing;
import org.transsonic.trustgame.data.trustgame.tables.Carrier;
import org.transsonic.trustgame.data.trustgame.tables.Carrierreview;
import org.transsonic.trustgame.data.trustgame.tables.Client;
import org.transsonic.trustgame.data.trustgame.tables.Fbreport;
import org.transsonic.trustgame.data.trustgame.tables.Game;
import org.transsonic.trustgame.data.trustgame.tables.Gameplay;
import org.transsonic.trustgame.data.trustgame.tables.Gameuser;
import org.transsonic.trustgame.data.trustgame.tables.Mission;
import org.transsonic.trustgame.data.trustgame.tables.Order;
import org.transsonic.trustgame.data.trustgame.tables.Ordercarrier;
import org.transsonic.trustgame.data.trustgame.tables.Review;
import org.transsonic.trustgame.data.trustgame.tables.Round;
import org.transsonic.trustgame.data.trustgame.tables.Selectedcarrier;
import org.transsonic.trustgame.data.trustgame.tables.User;
import org.transsonic.trustgame.data.trustgame.tables.Usercarrier;
import org.transsonic.trustgame.data.trustgame.tables.Userclick;
import org.transsonic.trustgame.data.trustgame.tables.Usergroup;
import org.transsonic.trustgame.data.trustgame.tables.Userorder;
import org.transsonic.trustgame.data.trustgame.tables.Userround;
import org.transsonic.trustgame.data.trustgame.tables.records.BriefingRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.CarrierRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.CarrierreviewRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.ClientRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.FbreportRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.GameRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.GameplayRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.GameuserRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.MissionRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.OrderRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.OrdercarrierRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.ReviewRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.RoundRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.SelectedcarrierRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.UserRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.UsercarrierRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.UserclickRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.UsergroupRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.UserorderRecord;
import org.transsonic.trustgame.data.trustgame.tables.records.UserroundRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * trustgame.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BriefingRecord> KEY_BRIEFING_ID_UNIQUE = Internal.createUniqueKey(Briefing.BRIEFING, DSL.name("KEY_briefing_ID_UNIQUE"), new TableField[] { Briefing.BRIEFING.ID }, true);
    public static final UniqueKey<BriefingRecord> KEY_BRIEFING_PRIMARY = Internal.createUniqueKey(Briefing.BRIEFING, DSL.name("KEY_briefing_PRIMARY"), new TableField[] { Briefing.BRIEFING.ID }, true);
    public static final UniqueKey<CarrierRecord> KEY_CARRIER_ID_UNIQUE = Internal.createUniqueKey(Carrier.CARRIER, DSL.name("KEY_carrier_ID_UNIQUE"), new TableField[] { Carrier.CARRIER.ID }, true);
    public static final UniqueKey<CarrierRecord> KEY_CARRIER_PRIMARY = Internal.createUniqueKey(Carrier.CARRIER, DSL.name("KEY_carrier_PRIMARY"), new TableField[] { Carrier.CARRIER.ID }, true);
    public static final UniqueKey<CarrierreviewRecord> KEY_CARRIERREVIEW_ID_UNIQUE = Internal.createUniqueKey(Carrierreview.CARRIERREVIEW, DSL.name("KEY_carrierreview_ID_UNIQUE"), new TableField[] { Carrierreview.CARRIERREVIEW.ID }, true);
    public static final UniqueKey<CarrierreviewRecord> KEY_CARRIERREVIEW_PRIMARY = Internal.createUniqueKey(Carrierreview.CARRIERREVIEW, DSL.name("KEY_carrierreview_PRIMARY"), new TableField[] { Carrierreview.CARRIERREVIEW.ID }, true);
    public static final UniqueKey<ClientRecord> KEY_CLIENT_ID_UNIQUE = Internal.createUniqueKey(Client.CLIENT, DSL.name("KEY_client_ID_UNIQUE"), new TableField[] { Client.CLIENT.ID }, true);
    public static final UniqueKey<ClientRecord> KEY_CLIENT_PRIMARY = Internal.createUniqueKey(Client.CLIENT, DSL.name("KEY_client_PRIMARY"), new TableField[] { Client.CLIENT.ID }, true);
    public static final UniqueKey<FbreportRecord> KEY_FBREPORT_ID_UNIQUE = Internal.createUniqueKey(Fbreport.FBREPORT, DSL.name("KEY_fbreport_ID_UNIQUE"), new TableField[] { Fbreport.FBREPORT.ID }, true);
    public static final UniqueKey<FbreportRecord> KEY_FBREPORT_PRIMARY = Internal.createUniqueKey(Fbreport.FBREPORT, DSL.name("KEY_fbreport_PRIMARY"), new TableField[] { Fbreport.FBREPORT.ID }, true);
    public static final UniqueKey<GameRecord> KEY_GAME_CODE_UNIQUE = Internal.createUniqueKey(Game.GAME, DSL.name("KEY_game_Code_UNIQUE"), new TableField[] { Game.GAME.CODE }, true);
    public static final UniqueKey<GameRecord> KEY_GAME_IDGAME_UNIQUE = Internal.createUniqueKey(Game.GAME, DSL.name("KEY_game_idGame_UNIQUE"), new TableField[] { Game.GAME.ID }, true);
    public static final UniqueKey<GameRecord> KEY_GAME_PRIMARY = Internal.createUniqueKey(Game.GAME, DSL.name("KEY_game_PRIMARY"), new TableField[] { Game.GAME.ID }, true);
    public static final UniqueKey<GameplayRecord> KEY_GAMEPLAY_ID_UNIQUE = Internal.createUniqueKey(Gameplay.GAMEPLAY, DSL.name("KEY_gameplay_ID_UNIQUE"), new TableField[] { Gameplay.GAMEPLAY.ID }, true);
    public static final UniqueKey<GameplayRecord> KEY_GAMEPLAY_PRIMARY = Internal.createUniqueKey(Gameplay.GAMEPLAY, DSL.name("KEY_gameplay_PRIMARY"), new TableField[] { Gameplay.GAMEPLAY.ID }, true);
    public static final UniqueKey<GameuserRecord> KEY_GAMEUSER_ID_UNIQUE = Internal.createUniqueKey(Gameuser.GAMEUSER, DSL.name("KEY_gameuser_ID_UNIQUE"), new TableField[] { Gameuser.GAMEUSER.ID }, true);
    public static final UniqueKey<GameuserRecord> KEY_GAMEUSER_PRIMARY = Internal.createUniqueKey(Gameuser.GAMEUSER, DSL.name("KEY_gameuser_PRIMARY"), new TableField[] { Gameuser.GAMEUSER.ID }, true);
    public static final UniqueKey<MissionRecord> KEY_MISSION_GAME_ID_UNIQUE = Internal.createUniqueKey(Mission.MISSION, DSL.name("KEY_mission_Game_ID_UNIQUE"), new TableField[] { Mission.MISSION.GAME_ID }, true);
    public static final UniqueKey<MissionRecord> KEY_MISSION_ID_UNIQUE = Internal.createUniqueKey(Mission.MISSION, DSL.name("KEY_mission_ID_UNIQUE"), new TableField[] { Mission.MISSION.ID }, true);
    public static final UniqueKey<MissionRecord> KEY_MISSION_PRIMARY = Internal.createUniqueKey(Mission.MISSION, DSL.name("KEY_mission_PRIMARY"), new TableField[] { Mission.MISSION.ID }, true);
    public static final UniqueKey<OrderRecord> KEY_ORDER_ID_UNIQUE = Internal.createUniqueKey(Order.ORDER, DSL.name("KEY_order_ID_UNIQUE"), new TableField[] { Order.ORDER.ID }, true);
    public static final UniqueKey<OrderRecord> KEY_ORDER_PRIMARY = Internal.createUniqueKey(Order.ORDER, DSL.name("KEY_order_PRIMARY"), new TableField[] { Order.ORDER.ID }, true);
    public static final UniqueKey<OrdercarrierRecord> KEY_ORDERCARRIER_ID_UNIQUE = Internal.createUniqueKey(Ordercarrier.ORDERCARRIER, DSL.name("KEY_ordercarrier_ID_UNIQUE"), new TableField[] { Ordercarrier.ORDERCARRIER.ID }, true);
    public static final UniqueKey<OrdercarrierRecord> KEY_ORDERCARRIER_PRIMARY = Internal.createUniqueKey(Ordercarrier.ORDERCARRIER, DSL.name("KEY_ordercarrier_PRIMARY"), new TableField[] { Ordercarrier.ORDERCARRIER.ID }, true);
    public static final UniqueKey<ReviewRecord> KEY_REVIEW_ID_UNIQUE = Internal.createUniqueKey(Review.REVIEW, DSL.name("KEY_review_ID_UNIQUE"), new TableField[] { Review.REVIEW.ID }, true);
    public static final UniqueKey<ReviewRecord> KEY_REVIEW_PRIMARY = Internal.createUniqueKey(Review.REVIEW, DSL.name("KEY_review_PRIMARY"), new TableField[] { Review.REVIEW.ID }, true);
    public static final UniqueKey<RoundRecord> KEY_ROUND_IDROUND_UNIQUE = Internal.createUniqueKey(Round.ROUND, DSL.name("KEY_round_idRound_UNIQUE"), new TableField[] { Round.ROUND.ID }, true);
    public static final UniqueKey<RoundRecord> KEY_ROUND_PRIMARY = Internal.createUniqueKey(Round.ROUND, DSL.name("KEY_round_PRIMARY"), new TableField[] { Round.ROUND.ID }, true);
    public static final UniqueKey<SelectedcarrierRecord> KEY_SELECTEDCARRIER_ID_UNIQUE = Internal.createUniqueKey(Selectedcarrier.SELECTEDCARRIER, DSL.name("KEY_selectedcarrier_ID_UNIQUE"), new TableField[] { Selectedcarrier.SELECTEDCARRIER.ID }, true);
    public static final UniqueKey<SelectedcarrierRecord> KEY_SELECTEDCARRIER_PRIMARY = Internal.createUniqueKey(Selectedcarrier.SELECTEDCARRIER, DSL.name("KEY_selectedcarrier_PRIMARY"), new TableField[] { Selectedcarrier.SELECTEDCARRIER.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_ID_UNIQUE = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_ID_UNIQUE"), new TableField[] { User.USER.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.ID }, true);
    public static final UniqueKey<UserRecord> KEY_USER_USERCODE_UNIQUE = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_UserCode_UNIQUE"), new TableField[] { User.USER.USERCODE }, true);
    public static final UniqueKey<UserRecord> KEY_USER_USERNAME_UNIQUE = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_Username_UNIQUE"), new TableField[] { User.USER.USERNAME }, true);
    public static final UniqueKey<UsercarrierRecord> KEY_USERCARRIER_ID_UNIQUE = Internal.createUniqueKey(Usercarrier.USERCARRIER, DSL.name("KEY_usercarrier_ID_UNIQUE"), new TableField[] { Usercarrier.USERCARRIER.ID }, true);
    public static final UniqueKey<UsercarrierRecord> KEY_USERCARRIER_PRIMARY = Internal.createUniqueKey(Usercarrier.USERCARRIER, DSL.name("KEY_usercarrier_PRIMARY"), new TableField[] { Usercarrier.USERCARRIER.ID }, true);
    public static final UniqueKey<UserclickRecord> KEY_USERCLICK_ID_UNIQUE = Internal.createUniqueKey(Userclick.USERCLICK, DSL.name("KEY_userclick_ID_UNIQUE"), new TableField[] { Userclick.USERCLICK.ID }, true);
    public static final UniqueKey<UserclickRecord> KEY_USERCLICK_PRIMARY = Internal.createUniqueKey(Userclick.USERCLICK, DSL.name("KEY_userclick_PRIMARY"), new TableField[] { Userclick.USERCLICK.ID }, true);
    public static final UniqueKey<UsergroupRecord> KEY_USERGROUP_ID_UNIQUE = Internal.createUniqueKey(Usergroup.USERGROUP, DSL.name("KEY_usergroup_ID_UNIQUE"), new TableField[] { Usergroup.USERGROUP.ID }, true);
    public static final UniqueKey<UsergroupRecord> KEY_USERGROUP_PRIMARY = Internal.createUniqueKey(Usergroup.USERGROUP, DSL.name("KEY_usergroup_PRIMARY"), new TableField[] { Usergroup.USERGROUP.ID }, true);
    public static final UniqueKey<UserorderRecord> KEY_USERORDER_ID_UNIQUE = Internal.createUniqueKey(Userorder.USERORDER, DSL.name("KEY_userorder_ID_UNIQUE"), new TableField[] { Userorder.USERORDER.ID }, true);
    public static final UniqueKey<UserorderRecord> KEY_USERORDER_PRIMARY = Internal.createUniqueKey(Userorder.USERORDER, DSL.name("KEY_userorder_PRIMARY"), new TableField[] { Userorder.USERORDER.ID }, true);
    public static final UniqueKey<UserroundRecord> KEY_USERROUND_ID_UNIQUE = Internal.createUniqueKey(Userround.USERROUND, DSL.name("KEY_userround_ID_UNIQUE"), new TableField[] { Userround.USERROUND.ID }, true);
    public static final UniqueKey<UserroundRecord> KEY_USERROUND_PRIMARY = Internal.createUniqueKey(Userround.USERROUND, DSL.name("KEY_userround_PRIMARY"), new TableField[] { Userround.USERROUND.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CarrierRecord, GameRecord> FK_CARRIER_GAME1 = Internal.createForeignKey(Carrier.CARRIER, DSL.name("fk_Carrier_Game1"), new TableField[] { Carrier.CARRIER.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<CarrierreviewRecord, CarrierRecord> FK_CARRIERREVIEW_CARRIER1 = Internal.createForeignKey(Carrierreview.CARRIERREVIEW, DSL.name("fk_CarrierReview_Carrier1"), new TableField[] { Carrierreview.CARRIERREVIEW.CARRIER_ID }, Keys.KEY_CARRIER_PRIMARY, new TableField[] { Carrier.CARRIER.ID }, true);
    public static final ForeignKey<CarrierreviewRecord, RoundRecord> FK_CARRIERREVIEW_ROUND1 = Internal.createForeignKey(Carrierreview.CARRIERREVIEW, DSL.name("fk_CarrierReview_Round1"), new TableField[] { Carrierreview.CARRIERREVIEW.ROUND_ID }, Keys.KEY_ROUND_PRIMARY, new TableField[] { Round.ROUND.ID }, true);
    public static final ForeignKey<ClientRecord, GameRecord> FK_CLIENT_GAME1 = Internal.createForeignKey(Client.CLIENT, DSL.name("fk_Client_Game1"), new TableField[] { Client.CLIENT.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<FbreportRecord, CarrierRecord> FK_FBREPORT_CARRIER1 = Internal.createForeignKey(Fbreport.FBREPORT, DSL.name("fk_FBReport_Carrier1"), new TableField[] { Fbreport.FBREPORT.CARRIER_ID }, Keys.KEY_CARRIER_PRIMARY, new TableField[] { Carrier.CARRIER.ID }, true);
    public static final ForeignKey<GameplayRecord, BriefingRecord> FK_GAMEPLAY_BRIEFING1 = Internal.createForeignKey(Gameplay.GAMEPLAY, DSL.name("fk_GamePlay_Briefing1"), new TableField[] { Gameplay.GAMEPLAY.BRIEFING_ID }, Keys.KEY_BRIEFING_PRIMARY, new TableField[] { Briefing.BRIEFING.ID }, true);
    public static final ForeignKey<GameplayRecord, BriefingRecord> FK_GAMEPLAY_BRIEFING2 = Internal.createForeignKey(Gameplay.GAMEPLAY, DSL.name("fk_GamePlay_Briefing2"), new TableField[] { Gameplay.GAMEPLAY.DEBRIEFING_ID }, Keys.KEY_BRIEFING_PRIMARY, new TableField[] { Briefing.BRIEFING.ID }, true);
    public static final ForeignKey<GameplayRecord, BriefingRecord> FK_GAMEPLAY_BRIEFING3 = Internal.createForeignKey(Gameplay.GAMEPLAY, DSL.name("fk_GamePlay_Briefing3"), new TableField[] { Gameplay.GAMEPLAY.HELP_ID }, Keys.KEY_BRIEFING_PRIMARY, new TableField[] { Briefing.BRIEFING.ID }, true);
    public static final ForeignKey<GameplayRecord, GameRecord> FK_GAMEPLAY_GAME1 = Internal.createForeignKey(Gameplay.GAMEPLAY, DSL.name("fk_GamePlay_Game1"), new TableField[] { Gameplay.GAMEPLAY.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<GameuserRecord, GameplayRecord> FK_USER_GAMEPLAY1 = Internal.createForeignKey(Gameuser.GAMEUSER, DSL.name("fk_User_GamePlay1"), new TableField[] { Gameuser.GAMEUSER.GAMEPLAY_ID }, Keys.KEY_GAMEPLAY_PRIMARY, new TableField[] { Gameplay.GAMEPLAY.ID }, true);
    public static final ForeignKey<GameuserRecord, UserRecord> FK_USER_USERS1 = Internal.createForeignKey(Gameuser.GAMEUSER, DSL.name("fk_User_users1"), new TableField[] { Gameuser.GAMEUSER.USER_ID }, Keys.KEY_USER_PRIMARY, new TableField[] { User.USER.ID }, true);
    public static final ForeignKey<MissionRecord, GameRecord> FK_MISSION_GAME1 = Internal.createForeignKey(Mission.MISSION, DSL.name("fk_Mission_Game1"), new TableField[] { Mission.MISSION.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<OrderRecord, ClientRecord> FK_ORDER_CUSTOMER1 = Internal.createForeignKey(Order.ORDER, DSL.name("fk_Order_Customer1"), new TableField[] { Order.ORDER.CLIENT_ID }, Keys.KEY_CLIENT_PRIMARY, new TableField[] { Client.CLIENT.ID }, true);
    public static final ForeignKey<OrderRecord, RoundRecord> FK_ORDER_ROUND1 = Internal.createForeignKey(Order.ORDER, DSL.name("fk_Order_Round1"), new TableField[] { Order.ORDER.ROUND_ID }, Keys.KEY_ROUND_PRIMARY, new TableField[] { Round.ROUND.ID }, true);
    public static final ForeignKey<OrdercarrierRecord, CarrierRecord> FK_ORDERCARRIER_CARRIER1 = Internal.createForeignKey(Ordercarrier.ORDERCARRIER, DSL.name("fk_OrderCarrier_Carrier1"), new TableField[] { Ordercarrier.ORDERCARRIER.CARRIER_ID }, Keys.KEY_CARRIER_PRIMARY, new TableField[] { Carrier.CARRIER.ID }, true);
    public static final ForeignKey<OrdercarrierRecord, OrderRecord> FK_ORDERCARRIER_ORDER1 = Internal.createForeignKey(Ordercarrier.ORDERCARRIER, DSL.name("fk_OrderCarrier_Order1"), new TableField[] { Ordercarrier.ORDERCARRIER.ORDER_ID }, Keys.KEY_ORDER_PRIMARY, new TableField[] { Order.ORDER.ID }, true);
    public static final ForeignKey<ReviewRecord, CarrierRecord> FK_REVIEW_CARRIER1 = Internal.createForeignKey(Review.REVIEW, DSL.name("fk_Review_Carrier1"), new TableField[] { Review.REVIEW.CARRIER_ID }, Keys.KEY_CARRIER_PRIMARY, new TableField[] { Carrier.CARRIER.ID }, true);
    public static final ForeignKey<ReviewRecord, RoundRecord> FK_REVIEW_ROUND1 = Internal.createForeignKey(Review.REVIEW, DSL.name("fk_Review_Round1"), new TableField[] { Review.REVIEW.ROUND_ID }, Keys.KEY_ROUND_PRIMARY, new TableField[] { Round.ROUND.ID }, true);
    public static final ForeignKey<RoundRecord, GameRecord> FK_ROUND_GAME = Internal.createForeignKey(Round.ROUND, DSL.name("fk_Round_Game"), new TableField[] { Round.ROUND.GAME_ID }, Keys.KEY_GAME_PRIMARY, new TableField[] { Game.GAME.ID }, true);
    public static final ForeignKey<SelectedcarrierRecord, OrdercarrierRecord> FK_SELECTEDCARRIER_ORDERCARRIER1 = Internal.createForeignKey(Selectedcarrier.SELECTEDCARRIER, DSL.name("fk_SelectedCarrier_OrderCarrier1"), new TableField[] { Selectedcarrier.SELECTEDCARRIER.ORDERCARRIER_ID }, Keys.KEY_ORDERCARRIER_PRIMARY, new TableField[] { Ordercarrier.ORDERCARRIER.ID }, true);
    public static final ForeignKey<SelectedcarrierRecord, UserorderRecord> FK_SELECTEDCARRIER_USERORDER1 = Internal.createForeignKey(Selectedcarrier.SELECTEDCARRIER, DSL.name("fk_SelectedCarrier_UserOrder1"), new TableField[] { Selectedcarrier.SELECTEDCARRIER.USERORDER_ID }, Keys.KEY_USERORDER_PRIMARY, new TableField[] { Userorder.USERORDER.ID }, true);
    public static final ForeignKey<UserRecord, UsergroupRecord> FK_USER_USERGROUP1 = Internal.createForeignKey(User.USER, DSL.name("fk_User_UserGroup1"), new TableField[] { User.USER.USERGROUP_ID }, Keys.KEY_USERGROUP_PRIMARY, new TableField[] { Usergroup.USERGROUP.ID }, true);
    public static final ForeignKey<UsercarrierRecord, CarrierRecord> FK_USERCARRIER_CARRIER = Internal.createForeignKey(Usercarrier.USERCARRIER, DSL.name("fk_UserCarrier_Carrier"), new TableField[] { Usercarrier.USERCARRIER.CARRIER_ID }, Keys.KEY_CARRIER_PRIMARY, new TableField[] { Carrier.CARRIER.ID }, true);
    public static final ForeignKey<UsercarrierRecord, GameuserRecord> FK_USERCARRIER_GAMEUSER = Internal.createForeignKey(Usercarrier.USERCARRIER, DSL.name("fk_UserCarrier_GameUser"), new TableField[] { Usercarrier.USERCARRIER.GAMEUSER_ID }, Keys.KEY_GAMEUSER_PRIMARY, new TableField[] { Gameuser.GAMEUSER.ID }, true);
    public static final ForeignKey<UserclickRecord, GameuserRecord> FK_USERCLICK_GAMEUSER = Internal.createForeignKey(Userclick.USERCLICK, DSL.name("fk_UserClick_GameUser"), new TableField[] { Userclick.USERCLICK.GAMEUSER_ID }, Keys.KEY_GAMEUSER_PRIMARY, new TableField[] { Gameuser.GAMEUSER.ID }, true);
    public static final ForeignKey<UserorderRecord, UserroundRecord> FK_USERORDER_GAMEPLAYROUND1 = Internal.createForeignKey(Userorder.USERORDER, DSL.name("fk_UserOrder_GamePlayRound1"), new TableField[] { Userorder.USERORDER.USERROUND_ID }, Keys.KEY_USERROUND_PRIMARY, new TableField[] { Userround.USERROUND.ID }, true);
    public static final ForeignKey<UserorderRecord, OrderRecord> FK_USERORDER_ORDER1 = Internal.createForeignKey(Userorder.USERORDER, DSL.name("fk_UserOrder_Order1"), new TableField[] { Userorder.USERORDER.ORDER_ID }, Keys.KEY_ORDER_PRIMARY, new TableField[] { Order.ORDER.ID }, true);
    public static final ForeignKey<UserroundRecord, GameplayRecord> FK_GAMEPLAYROUND_GAMEPLAY1 = Internal.createForeignKey(Userround.USERROUND, DSL.name("fk_GamePlayRound_GamePlay1"), new TableField[] { Userround.USERROUND.GAMEPLAY_ID }, Keys.KEY_GAMEPLAY_PRIMARY, new TableField[] { Gameplay.GAMEPLAY.ID }, true);
    public static final ForeignKey<UserroundRecord, RoundRecord> FK_GAMEPLAYROUND_ROUND1 = Internal.createForeignKey(Userround.USERROUND, DSL.name("fk_GamePlayRound_Round1"), new TableField[] { Userround.USERROUND.ROUND_ID }, Keys.KEY_ROUND_PRIMARY, new TableField[] { Round.ROUND.ID }, true);
    public static final ForeignKey<UserroundRecord, GameuserRecord> FK_GAMEPLAYROUND_USER1 = Internal.createForeignKey(Userround.USERROUND, DSL.name("fk_GamePlayRound_User1"), new TableField[] { Userround.USERROUND.GAMEUSER_ID }, Keys.KEY_GAMEUSER_PRIMARY, new TableField[] { Gameuser.GAMEUSER.ID }, true);
}
