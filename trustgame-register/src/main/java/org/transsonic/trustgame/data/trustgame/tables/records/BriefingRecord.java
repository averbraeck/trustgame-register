/*
 * This file is generated by jOOQ.
 */
package org.transsonic.trustgame.data.trustgame.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.transsonic.trustgame.data.trustgame.tables.Briefing;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BriefingRecord extends UpdatableRecordImpl<BriefingRecord> implements Record4<Integer, String, String, byte[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>trustgame.briefing.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>trustgame.briefing.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>trustgame.briefing.Name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>trustgame.briefing.Name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>trustgame.briefing.BriefingText</code>.
     */
    public void setBriefingtext(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>trustgame.briefing.BriefingText</code>.
     */
    public String getBriefingtext() {
        return (String) get(2);
    }

    /**
     * Setter for <code>trustgame.briefing.BriefingImage</code>.
     */
    public void setBriefingimage(byte[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>trustgame.briefing.BriefingImage</code>.
     */
    public byte[] getBriefingimage() {
        return (byte[]) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, byte[]> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, byte[]> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Briefing.BRIEFING.ID;
    }

    @Override
    public Field<String> field2() {
        return Briefing.BRIEFING.NAME;
    }

    @Override
    public Field<String> field3() {
        return Briefing.BRIEFING.BRIEFINGTEXT;
    }

    @Override
    public Field<byte[]> field4() {
        return Briefing.BRIEFING.BRIEFINGIMAGE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getBriefingtext();
    }

    @Override
    public byte[] component4() {
        return getBriefingimage();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getBriefingtext();
    }

    @Override
    public byte[] value4() {
        return getBriefingimage();
    }

    @Override
    public BriefingRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BriefingRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public BriefingRecord value3(String value) {
        setBriefingtext(value);
        return this;
    }

    @Override
    public BriefingRecord value4(byte[] value) {
        setBriefingimage(value);
        return this;
    }

    @Override
    public BriefingRecord values(Integer value1, String value2, String value3, byte[] value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BriefingRecord
     */
    public BriefingRecord() {
        super(Briefing.BRIEFING);
    }

    /**
     * Create a detached, initialised BriefingRecord
     */
    public BriefingRecord(Integer id, String name, String briefingtext, byte[] briefingimage) {
        super(Briefing.BRIEFING);

        setId(id);
        setName(name);
        setBriefingtext(briefingtext);
        setBriefingimage(briefingimage);
    }
}
