/*
 * This file is generated by jOOQ.
 */
package org.transsonic.trustgame.data.trustgame.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.transsonic.trustgame.data.trustgame.tables.Order;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderRecord extends UpdatableRecordImpl<OrderRecord> implements Record7<Integer, Integer, UInteger, Integer, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>trustgame.order.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>trustgame.order.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>trustgame.order.Round_ID</code>.
     */
    public void setRoundId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>trustgame.order.Round_ID</code>.
     */
    public Integer getRoundId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>trustgame.order.OrderNumber</code>.
     */
    public void setOrdernumber(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>trustgame.order.OrderNumber</code>.
     */
    public UInteger getOrdernumber() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>trustgame.order.Client_ID</code>.
     */
    public void setClientId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>trustgame.order.Client_ID</code>.
     */
    public Integer getClientId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>trustgame.order.Description</code>. HTML or Markdown
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>trustgame.order.Description</code>. HTML or Markdown
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>trustgame.order.TransportEarnings</code>.
     */
    public void setTransportearnings(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>trustgame.order.TransportEarnings</code>.
     */
    public Integer getTransportearnings() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>trustgame.order.Note</code>. E.g., to indicate it is a repeating transport
     */
    public void setNote(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>trustgame.order.Note</code>. E.g., to indicate it is a repeating transport
     */
    public String getNote() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, UInteger, Integer, String, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, UInteger, Integer, String, Integer, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Order.ORDER.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Order.ORDER.ROUND_ID;
    }

    @Override
    public Field<UInteger> field3() {
        return Order.ORDER.ORDERNUMBER;
    }

    @Override
    public Field<Integer> field4() {
        return Order.ORDER.CLIENT_ID;
    }

    @Override
    public Field<String> field5() {
        return Order.ORDER.DESCRIPTION;
    }

    @Override
    public Field<Integer> field6() {
        return Order.ORDER.TRANSPORTEARNINGS;
    }

    @Override
    public Field<String> field7() {
        return Order.ORDER.NOTE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getRoundId();
    }

    @Override
    public UInteger component3() {
        return getOrdernumber();
    }

    @Override
    public Integer component4() {
        return getClientId();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Integer component6() {
        return getTransportearnings();
    }

    @Override
    public String component7() {
        return getNote();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getRoundId();
    }

    @Override
    public UInteger value3() {
        return getOrdernumber();
    }

    @Override
    public Integer value4() {
        return getClientId();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public Integer value6() {
        return getTransportearnings();
    }

    @Override
    public String value7() {
        return getNote();
    }

    @Override
    public OrderRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public OrderRecord value2(Integer value) {
        setRoundId(value);
        return this;
    }

    @Override
    public OrderRecord value3(UInteger value) {
        setOrdernumber(value);
        return this;
    }

    @Override
    public OrderRecord value4(Integer value) {
        setClientId(value);
        return this;
    }

    @Override
    public OrderRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public OrderRecord value6(Integer value) {
        setTransportearnings(value);
        return this;
    }

    @Override
    public OrderRecord value7(String value) {
        setNote(value);
        return this;
    }

    @Override
    public OrderRecord values(Integer value1, Integer value2, UInteger value3, Integer value4, String value5, Integer value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderRecord
     */
    public OrderRecord() {
        super(Order.ORDER);
    }

    /**
     * Create a detached, initialised OrderRecord
     */
    public OrderRecord(Integer id, Integer roundId, UInteger ordernumber, Integer clientId, String description, Integer transportearnings, String note) {
        super(Order.ORDER);

        setId(id);
        setRoundId(roundId);
        setOrdernumber(ordernumber);
        setClientId(clientId);
        setDescription(description);
        setTransportearnings(transportearnings);
        setNote(note);
    }
}
